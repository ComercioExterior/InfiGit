//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : INFI-SITME
//  @ File Name : MensajeEstadistica.java
//  @ Date : 08/02/2011
//  @ Author : 
//
//



package com.bdv.infi.logic.interfaz_varias;

import models.utilitarios.mensajes_interfaces.ProcesarEnvio;

import org.apache.log4j.Logger;

import com.bdv.infi.util.Utilitario;


/**
 * Mensaje con los datos que se deben mandar a la interfaz de estadistica
 * @author nvisbal
 *
 */
public class MensajeEstadistica extends Mensaje {

	private Logger logger = Logger.getLogger(MensajeEstadistica.class);
	
	public final String CODIGO_OFICINA = "CODIGO_OFICINA";
	public final String CEDULA_RIF_PASAPORTE = "CEDULA_RIF_PASAPORTE";
	public final String FECHA_PROCESO = "FECHA_PROCESO";
	public final String REFERENCIA = "REFERENCIA";
	public final String CONCEPTO_ESTADISTICO = "CONCEPTO_ESTADISTICO";
	public final String TIPO_DE_OPERACION = "TIPO_DE_OPERACION";
	public final String FORMA_DE_PAGO = "FORMA_DE_PAGO";
	public final String CODIGO_DIVISA = "CODIGO_DIVISA";
	public final String NOMBRE_RAZON_SOCIAL = "NOMBRE_RAZON_SOCIAL";
	public final String MONTO_MONEDA_EXTRANJERA = "MONTO_MONEDA_EXTRANJERA";
	public final String TASA_CAMBIO_BOLIVAR = "TASA_CAMBIO_BOLIVAR";
	public final String TASA_CAMBIO_DOLAR = "TASA_CAMBIO_DOLAR";
	public final String HORA = "HORA";
	public final String FECHA_VALOR = "FECHA_VALOR";
	public final String INDICADOR = "INDICADOR";
	public final String BANCO_CORRESPONSAL = "BANCO_CORRESPONSAL";
	public final String REVERSO_OPERACIONES = "REVERSO_OPERACIONES";
	public final String USUARIO = "USUARIO";
	public final String REFERENCIA_BANKTRADE = "REFERENCIA_BANKTRADE";
	public final String NOMBRE_DEL_BENEFICIARIO = "NOMBRE_DEL_BENEFICIARIO";
	public final String PAIS_BANCO_CORRESPONSAL = "PAIS_BANCO_CORRESPONSAL";
	public final String NUM_CUENTA_CLIENTE = "NUM_CUENTA_CLIENTE";
	public final String FIRMAS_AUTORIZADAS = "FIRMAS_AUTORIZADAS";
	public final String CEDULA_RIF_BENEFICIARIO = "CEDULA_RIF_BENEFICIARIO";
	public final String VIOLACION_PARAMETROS = "VIOLACION_PARAMETROS";
	public final String SECTOR_PUBLICO_PRIVADO = "SECTOR_PUBLICO_PRIVADO";
	public final String PAIS_DESTINO_FINAL_ORIGEN = "PAIS_DESTINO_FINAL_ORIGEN";
	public final String CTA_BENEFICIARIO = "CTA_BENEFICIARIO";
	public static final String TIPO_MENSAJE = "MENSAJE_ESTADISTICA";

	/**
	 * Constantes de Valores (V) para la Interfaz Estadistica
	 */	
	public static final String V_CONCEPTO_VENTA = "267";
	public static final String V_CONCEPTO_COMPRA = "167";
	public static final String V_CODIGO_DIVISA_DOLAR = "001";
	public static final String V_SECTOR_PUBLICO = "1";
	public static final String V_SECTOR_PRIVADO = "2";	
	
	public MensajeEstadistica() {
		super(TIPO_MENSAJE);
		this.set(CODIGO_OFICINA, VALOR_VACIO);
		this.set(CEDULA_RIF_PASAPORTE , VALOR_VACIO);
		this.set(FECHA_PROCESO , VALOR_VACIO);
		this.set(REFERENCIA , VALOR_VACIO);
		this.set(CONCEPTO_ESTADISTICO , VALOR_VACIO);
		this.set(TIPO_DE_OPERACION , VALOR_VACIO);
		this.set(FORMA_DE_PAGO , VALOR_VACIO);
		this.set(CODIGO_DIVISA , VALOR_VACIO);
		this.set(NOMBRE_RAZON_SOCIAL , VALOR_VACIO);
		this.set(MONTO_MONEDA_EXTRANJERA , VALOR_VACIO);
		this.set(TASA_CAMBIO_BOLIVAR, VALOR_VACIO); 
		this.set(TASA_CAMBIO_DOLAR , VALOR_VACIO);
		this.set(HORA , VALOR_VACIO);
		this.set(FECHA_VALOR , VALOR_VACIO);
		this.set(INDICADOR , VALOR_VACIO);
		this.set(BANCO_CORRESPONSAL , VALOR_VACIO);
		this.set(REVERSO_OPERACIONES , VALOR_VACIO);
		this.set(USUARIO , VALOR_VACIO);
		this.set(REFERENCIA_BANKTRADE , VALOR_VACIO);
		this.set(NOMBRE_DEL_BENEFICIARIO, VALOR_VACIO);
		this.set(PAIS_BANCO_CORRESPONSAL, VALOR_VACIO); 
		this.set(NUM_CUENTA_CLIENTE , VALOR_VACIO);
		this.set(FIRMAS_AUTORIZADAS , VALOR_VACIO);
		this.set(CEDULA_RIF_BENEFICIARIO , VALOR_VACIO);
		this.set(VIOLACION_PARAMETROS, VALOR_VACIO); 
		this.set(SECTOR_PUBLICO_PRIVADO, VALOR_VACIO); 
		this.set(PAIS_DESTINO_FINAL_ORIGEN, VALOR_VACIO); 
		this.set(CTA_BENEFICIARIO, VALOR_VACIO); 
	}

	@Override
	public void formatearCampos() throws Exception {
		try {
			
			this.set(CODIGO_OFICINA, Utilitario.rellenarCaracteres(this.get(CODIGO_OFICINA), '0', 6, false));
			this.set(CEDULA_RIF_PASAPORTE, this.get(CEDULA_RIF_PASAPORTE).substring(0,1) 
					+ Utilitario.rellenarCaracteres(this.get(CEDULA_RIF_PASAPORTE).substring(1), '0', 14, false));
					
			
					
				this.set(CEDULA_RIF_BENEFICIARIO, this.get(CEDULA_RIF_BENEFICIARIO).substring(0,1) 
						+ Utilitario.rellenarCaracteres(this.get(CEDULA_RIF_BENEFICIARIO).substring(1), '0', 14, false));
				
					
			this.set(FECHA_PROCESO , Utilitario.rellenarCaracteres(this.get(FECHA_PROCESO), '0', 8, false));
			this.set(REFERENCIA , Utilitario.rellenarCaracteres(this.get(REFERENCIA), '0', 10, false));	
			this.set(CONCEPTO_ESTADISTICO , Utilitario.rellenarCaracteres(this.get(CONCEPTO_ESTADISTICO), '0', 3, false));		
			this.set(TIPO_DE_OPERACION , Utilitario.rellenarCaracteres(this.get(TIPO_DE_OPERACION), '0', 1, false));	
			this.set(FORMA_DE_PAGO , Utilitario.rellenarCaracteres(this.get(FORMA_DE_PAGO), '0', 1, false));		
			this.set(CODIGO_DIVISA , Utilitario.rellenarCaracteres(this.get(CODIGO_DIVISA), ' ', 3, false));	
			this.set(NOMBRE_RAZON_SOCIAL , Utilitario.rellenarCaracteres(this.get(NOMBRE_RAZON_SOCIAL), ' ', 40, true, true));	
			this.set(MONTO_MONEDA_EXTRANJERA , Utilitario.rellenarCaracteres(formatearNumeroConReemplazo(this.get(MONTO_MONEDA_EXTRANJERA)), '0', 17, false));		
			//TODO Codigo a prueba
			///*COdigo Original*/this.set(TASA_CAMBIO_BOLIVAR, Utilitario.rellenarCaracteres(formatearNumeroConReemplazo(this.get(TASA_CAMBIO_BOLIVAR), 8), '0', 13, false));
			/*VERIFICAR EL RELLENADO DE LOS CEROS*/this.set(TASA_CAMBIO_BOLIVAR, Utilitario.rellenarCaracteres(formatearNumeroConReemplazo(this.get(TASA_CAMBIO_BOLIVAR), 7), '0', 13, false)); 
			System.out.println(" TASA_CAMBIO_BOLIVAR " + Utilitario.rellenarCaracteres(formatearNumeroConReemplazo(this.get(TASA_CAMBIO_BOLIVAR), 7), '0', 13, false));
			///*Codigo Original*/this.set(TASA_CAMBIO_DOLAR , Utilitario.rellenarCaracteres(formatearNumeroConReemplazo(this.get(TASA_CAMBIO_DOLAR),8), '0', 13, false));
			this.set(TASA_CAMBIO_DOLAR , Utilitario.rellenarCaracteres(formatearNumeroConReemplazo(this.get(TASA_CAMBIO_DOLAR),7), '0', 13, false));
			System.out.println("TASA_CAMBIO_DOLAR "+ Utilitario.rellenarCaracteres(formatearNumeroConReemplazo(this.get(TASA_CAMBIO_DOLAR),7), '0', 13, false));
			this.set(HORA , Utilitario.rellenarCaracteres(this.get(HORA), '0', 4, false));		
			this.set(FECHA_VALOR , Utilitario.rellenarCaracteres(this.get(FECHA_VALOR), '0', 8, false));		
			this.set(INDICADOR , Utilitario.rellenarCaracteres(this.get(INDICADOR), '0', 1, false));		
			this.set(BANCO_CORRESPONSAL , Utilitario.rellenarCaracteres(this.get(BANCO_CORRESPONSAL), '0', 4, false));		
			this.set(REVERSO_OPERACIONES , Utilitario.rellenarCaracteres(this.get(REVERSO_OPERACIONES), ' ', 1, false));
			this.set(USUARIO , Utilitario.rellenarCaracteres(this.get(USUARIO), ' ', 9, true));
			this.set(REFERENCIA_BANKTRADE , Utilitario.rellenarCaracteres(this.get(REFERENCIA_BANKTRADE), ' ', 10, true));	
			this.set(NOMBRE_DEL_BENEFICIARIO, Utilitario.rellenarCaracteres(this.get(NOMBRE_DEL_BENEFICIARIO), ' ', 35, true, true));		
			this.set(PAIS_BANCO_CORRESPONSAL, Utilitario.rellenarCaracteres(this.get(PAIS_BANCO_CORRESPONSAL), '0', 4, false)); 
			this.set(NUM_CUENTA_CLIENTE , Utilitario.rellenarCaracteres(this.get(NUM_CUENTA_CLIENTE), '0', 12, false));		
			this.set(FIRMAS_AUTORIZADAS , Utilitario.rellenarCaracteres(this.get(FIRMAS_AUTORIZADAS), ' ', 9, true));
			this.set(CEDULA_RIF_BENEFICIARIO , Utilitario.rellenarCaracteres(this.get(CEDULA_RIF_BENEFICIARIO), ' ', 15, true));		
			this.set(VIOLACION_PARAMETROS, Utilitario.rellenarCaracteres(this.get(VIOLACION_PARAMETROS), '0', 1, false)); 
			this.set(SECTOR_PUBLICO_PRIVADO, Utilitario.rellenarCaracteres(this.get(SECTOR_PUBLICO_PRIVADO), '0', 1, false)); 
			this.set(PAIS_DESTINO_FINAL_ORIGEN, Utilitario.rellenarCaracteres(this.get(PAIS_DESTINO_FINAL_ORIGEN), '0', 4, false)); 
			this.set(CTA_BENEFICIARIO, Utilitario.rellenarCaracteres(this.get(CTA_BENEFICIARIO), ' ', 35, true));
		} catch (Exception e) {			
			logger.error("Ha ocurrido un error procesando un Mensajes Estadistica " + e.getMessage());
			throw new Exception("Error procesando Mensaje Estadistica " + e.getMessage());
		}

	}
}
