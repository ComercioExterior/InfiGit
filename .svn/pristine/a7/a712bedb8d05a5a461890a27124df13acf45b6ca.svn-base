package com.bdv.infi.dao;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.sql.DataSource;
import com.bdv.infi.data.ClientesMesa;
import megasoft.db;

/**
 * Clase para buscar, agregar, modificar y eliminar las operaciones de mesa de cambio que van a permitir la validación por parte del usuario para la notificación
 */
public class MesaCambioDAO extends com.bdv.infi.dao.GenericoDAO {

	public String Dinamico = "";
	protected StringBuilder sql = new StringBuilder();
	List<ClientesMesa> lst = new ArrayList<ClientesMesa>();

	public MesaCambioDAO(Transaccion transaccion) throws Exception {
		super(transaccion);
	}

	public MesaCambioDAO(DataSource ds) {
		super(ds);
		sql.append("SELECT ID_OPER, COD_FINSTITUCION, ID_OC, PRODUCTO, TIPO_PACTO, TIPO_INSTRUM, TIPO_OPER, MTO_DIVISAS, MTO_BOLIVARES, TASA_CAMBIO, MTO_COMI, " + "TIPO_PER_OFER, CED_RIF_OFER, NOM_OFER, CTA_OFER_MN, CTA_OFER_ME, TIPO_PER_DEMA, CED_RIF_DEMA, "
				+ "NOM_DEMA, CTA_DEMA_MN, CTA_DEMA_ME, FECH_OPER, COD_DIVISAS, decode(STATUS_ENVIO,'0','NO ENVIADO','1','ENVIADO','2','MANUAL','3','ANULADA','4','RECHAZADA') as Estatus, " + "FECHA_ENVIO, OBSERVACION, ID_BCV ");
		sql.append("FROM INFI_TB_236_OPER_DIVISAS ");
	}

	/**
	 * 
	 * 
	 * @throws Exception
	 */
	public void listar() throws Exception {

		StringBuffer sb = new StringBuffer();
		sb.append("select oficina_nro from infi_tb_034_oficina");
		dataSet = db.get(dataSource, sb.toString());
	}

	public void Listar(boolean paginado, int paginaAMostrar, int registroPorPagina, String tipo, String fecha, String estatusEnvio, String tipoMivimiento) throws Exception {

		StringBuilder sql = new StringBuilder();

		sql.append("SELECT ID_OPER, TIPO_PACTO, ID_OC,COD_FINSTITUCION, PRODUCTO, TIPO_OPER, MTO_DIVISAS, MTO_BOLIVARES, TASA_CAMBIO, MTO_COMI, " + "TIPO_PER_OFER, CED_RIF_OFER, NOM_OFER, CTA_OFER_MN, CTA_OFER_ME, TIPO_PER_DEMA, CED_RIF_DEMA, " + "NOM_DEMA, CTA_DEMA_MN, CTA_DEMA_ME, FECH_OPER, COD_DIVISAS, " + "decode(STATUS_ENVIO,'0','NO ENVIADO','1','ENVIADO','2','MANUAL','3','ANULADA','4','RECHAZADA') as Estatus, "
				+ "FECHA_ENVIO, OBSERVACION, ID_BCV ");
		sql.append("FROM INFI_TB_236_OPER_DIVISAS ");
		sql.append("WHERE ");
		sql.append(" TO_DATE(FECH_OPER,'DD/MM/YYYY') = TO_DATE('").append(fecha).append("', 'DD/MM/YYYY') ");

		// 5 Es igual a decir todas las operaciones, se manda en el formulario filter
		if (!estatusEnvio.equalsIgnoreCase("5")) {
			sql.append("AND STATUS_ENVIO='").append(estatusEnvio).append("' ");
		}

		if (!tipoMivimiento.equalsIgnoreCase("1111")) {
			sql.append("AND PRODUCTO='").append(tipoMivimiento).append("' ");
		}

		if (!tipo.equalsIgnoreCase("T")) {
			sql.append("AND TIPO_NOTIFICACION='").append(tipo).append("' ");
		}
		sql.append(" ORDER BY ID_OPER");
		System.out.println("Listar : " + sql);
		dataSet = obtenerDataSetPaginado(sql.toString(), paginaAMostrar, registroPorPagina);

	}

	public List<ClientesMesa> ListarEnvio(String tipo, String fecha, String estatusEnvio, String tipoMivimiento, String idOrdenes) throws Exception {

		sql.append("WHERE ");
		sql.append(" TO_DATE(FECH_OPER,'DD/MM/YYYY') = TO_DATE('").append(fecha).append("', 'DD/MM/YYYY') ");

		// 5 Es igual a decir todas las operaciones, se manda en el formulario filter
		if (!estatusEnvio.equalsIgnoreCase("1")) {
			if (estatusEnvio.equalsIgnoreCase("5")) {
				sql.append(" AND");
				sql.append(" (STATUS_ENVIO='").append("0").append("' ");
				sql.append(" OR ");
				sql.append("STATUS_ENVIO='").append("4").append("' ) ");
			} else {
				sql.append("AND STATUS_ENVIO='").append(estatusEnvio).append("' ");
			}

		}
//
//		if (!tipoMivimiento.equalsIgnoreCase("1111")) {
//			// sql.append("AND OPERACION='").append(tipoMivimiento).append("' ");
//		}
//
//		if (!tipo.equalsIgnoreCase("T")) {
//			// sql.append("AND STATUS_OPER='").append(tipo).append("' ");
//		}
//		System.out.println(" idOrdenes : : " + idOrdenes.isEmpty());
		if (!idOrdenes.equalsIgnoreCase("") || idOrdenes != "") {
			sql.append(" AND ID_OPER in(" + idOrdenes + ")");
		}

		// sql.append(" ORDER BY ID_OPER");
		System.out.println("ListarEnvio : " + sql);
		dataSet = db.get(dataSource, sql.toString());
		while (dataSet.next()) {

			ClientesMesa cl = new ClientesMesa();
			cl.IdOrdenes = dataSet.getValue("ID_OPER");
			cl.IdOc = dataSet.getValue("ID_OC");
			cl.Operacion = dataSet.getValue("PRODUCTO");
			cl.TipoOperacion = dataSet.getValue("TIPO_OPER");
			cl.MontoBaseDivisas = new BigDecimal(dataSet.getValue("MTO_DIVISAS"));
			cl.MontoBaseBolivares = new BigDecimal(dataSet.getValue("MTO_BOLIVARES"));
			cl.TasaCambio = new BigDecimal(dataSet.getValue("TASA_CAMBIO"));
			cl.MontoComision = new BigDecimal(dataSet.getValue("MTO_COMI"));
			cl.TipoOperacionOferta = dataSet.getValue("TIPO_PER_OFER");
			cl.CedulaRifOferta = dataSet.getValue("CED_RIF_OFER");
			cl.NombreOferta = dataSet.getValue("NOM_OFER");
			cl.CuentaOfertaMn = dataSet.getValue("CTA_OFER_MN");
			cl.CuentaOfertaMe = dataSet.getValue("CTA_OFER_ME");
			cl.TipoOperacionDemanda = dataSet.getValue("TIPO_PER_DEMA");
			cl.NombreDemanda = dataSet.getValue("NOM_DEMA");
			cl.CuentaDemandaMn = dataSet.getValue("CTA_DEMA_MN");
			cl.CuentaDemandaMe = dataSet.getValue("CTA_DEMA_ME");
			cl.CedulaRifDemanda = dataSet.getValue("CED_RIF_DEMA");
			cl.FechaOperacion = dataSet.getValue("FECH_OPER");
			cl.MonedaBase = dataSet.getValue("COD_DIVISAS");
			cl.NacionalidadDemanda = dataSet.getValue("TIPO_PER_DEMA");
			cl.NacionalidadOferta = dataSet.getValue("TIPO_PER_OFER");
			cl.Instrumento = dataSet.getValue("TIPO_INSTRUM");
			cl.codigoInstitucion = dataSet.getValue("COD_FINSTITUCION");
			// cl.ConceptoEstadistica = dataSet.getValue("estadistica");
			// cl.CodigoOficina = dataSet.getValue("COD_OFI_ORI");
			// cl.Correo = dataSet.getValue("EMAIL_CLIEN");
			// cl.Telefono = dataSet.getValue("TEL_CLIEN");
			cl.EstatusEnvio = dataSet.getValue("Estatus");
			cl.FechaEnvio = dataSet.getValue("FECHA_ENVIO");
			cl.TipoPacto = dataSet.getValue("TIPO_PACTO");
			cl.Observacion = dataSet.getValue("OBSERVACION");
			cl.IdBcv = dataSet.getValue("ID_BCV");
			// cl.MontoTransaccion = new BigDecimal(dataSet.getValue("MTO_DIVISAS_TRANS"));

			this.lst.add(cl);
		}
		return this.lst;
	}

	public void ListarEnvioAnular(String tipo, String fecha, String estatusEnvio, String tipoMivimiento, String idOrdenes) throws Exception {

		sql.append("WHERE ");
		sql.append(" TO_DATE(FECH_OPER,'DD/MM/YYYY') = TO_DATE('").append(fecha).append("', 'DD/MM/YYYY') ");

//		System.out.println(" idOrdenes : : " + idOrdenes.isEmpty());
		if (!idOrdenes.equalsIgnoreCase("") || idOrdenes !="") {
			sql.append(" AND ID_OPER in(" + idOrdenes + ")");
		}

		// sql.append(" ORDER BY ID_OPER");
		System.out.println("ListarEnvioAnular : " + sql);
		dataSet = db.get(dataSource, sql.toString());
	}

	public void modificar(String idOperacion, String idBcv, String mensaje, String estatusEnvio) throws Exception {

		StringBuffer sql = new StringBuffer();

		sql.append(" UPDATE INFI_TB_236_OPER_DIVISAS SET OBSERVACION ='").append(mensaje).append("'");
		if (idBcv != null) {
			sql.append(",ID_BCV ='").append(idBcv).append("'");
		}
		sql.append(",STATUS_ENVIO ='").append(estatusEnvio).append("'");
		sql.append(" WHERE ID_OPER =").append(idOperacion);
		System.out.println("modificar : " + sql);
		db.exec(dataSource, sql.toString());

	}

	public void ActualziarEstatus(String id, String observacion) {

		String update = "UPDATE INFI_TB_236_OPER_DIVISAS SET OBSERVACION = '" + observacion + "' , STATUS_ENVIO='" + observacion + "' WHERE ID_OPER ='" + id + "'";
		try {
			db.exec(dataSource, update.toString());
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("ActualziarEstatus : " + e);
		}

	}
	
	public void InsertarTransacciones(String idOc,String tipoOperacion,  String montoDivisas, String montoBs, String tasaCambio , String montoComision, 
			String tipoClienteOfer, String cedulaRifOfer, String nombreOfer, String cuentaOferMn, String cuentaOferMe, String tipoClienteDeman, 
			String cedulaRifDeman, String nombreDeman, String cuentaDemanMn, String cuentaDemanMe, String codigoDivisas, String montoPactoBase,String montoContraValor,
			String tipoPacto) {


//		String update = "UPDATE INFI_TB_236_OPER_DIVISAS SET OBSERVACION = '" + observacion + "' , STATUS_ENVIO='" + observacion + "' WHERE ID_OPER ='" + id + "'";
		String insert = "Insert into INFI_TB_236_OPER_DIVISAS"+
        "(ID_OPER,ID_OC,PRODUCTO,TIPO_NOTIFICACION,TIPO_OPER,MTO_DIVISAS,MTO_BOLIVARES,"+
         "TASA_CAMBIO,MTO_COMI,TIPO_PER_OFER,CED_RIF_OFER,NOM_OFER,"+
         "CTA_OFER_MN,CTA_OFER_ME,TIPO_PER_DEMA,CED_RIF_DEMA,NOM_DEMA,"+
         "CTA_DEMA_MN,CTA_DEMA_ME,FECH_OPER,COD_DIVISAS,MTO_PACTOBASE,MTO_CONTRAVALORBASE,"+
         "TASA_PACTOBASE,TIPO_PACTO,STATUS_ENVIO,FECHA_ENVIO,OBSERVACION,ID_BCV)"+
		"Values (INFI_SQ_236.nextval, '"+idOc+"', 'MECA', 'PD','"+tipoOperacion+"',"+montoDivisas+","+montoBs+", "+tasaCambio+","+montoComision+", '"+
		tipoClienteOfer+"','"+cedulaRifOfer+"','"+ nombreOfer+"','"+cuentaOferMn+"','"+cuentaOferMe+"','"+tipoClienteDeman+"','"+cedulaRifDeman+"','"+
		nombreDeman+"','"+cuentaDemanMn+"','"+cuentaDemanMe+"',SYSDATE, '"+codigoDivisas+"',"+montoPactoBase+","+montoContraValor+","+tasaCambio+",'"+tipoPacto+"',"+
		"'0','','','')";
		
		System.out.println("Guardar : "+insert);
		try {
			db.exec(dataSource, insert.toString());
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("MesaCambioDAO : InsertarTransacciones() " + e);
		}

	}

	public boolean verificarTransaccion(String id) throws Exception {
		StringBuffer sql = new StringBuffer();
		sql.append("SELECT * FROM INFI_TB_236_OPER_DIVISAS WHERE ID_OPER='").append(id).append("' AND STATUS_ENVIO ='0'");
		dataSet = db.get(dataSource, sql.toString());
		if (this.dataSet.count() > 0)
			return true;
		else
			return false;
	}

	@Override
	public Object moveNext() throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

}
